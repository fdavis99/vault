// Code generated by protoc-gen-go. DO NOT EDIT.
// source: types.proto

/*
Package storagepacker is a generated protocol buffer package.

It is generated from these files:
	types.proto

It has these top-level messages:
	Item
	BucketWrapper
	BucketV2
	Bucket
*/
package storagepacker

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import google_protobuf "github.com/golang/protobuf/ptypes/any"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

// Item represents a entry that gets inserted into the storage packer
type Item struct {
	// ID is the UUID to identify the item
	ID string `sentinel:"" protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	// message is the contents of the item
	Message *google_protobuf.Any `sentinel:"" protobuf:"bytes,2,opt,name=message" json:"message,omitempty"`
}

func (m *Item) Reset()                    { *m = Item{} }
func (m *Item) String() string            { return proto.CompactTextString(m) }
func (*Item) ProtoMessage()               {}
func (*Item) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *Item) GetID() string {
	if m != nil {
		return m.ID
	}
	return ""
}

func (m *Item) GetMessage() *google_protobuf.Any {
	if m != nil {
		return m.Message
	}
	return nil
}

type BucketWrapper struct {
	Data []byte `sentinel:"" protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
	Size int64  `sentinel:"" protobuf:"varint,2,opt,name=size" json:"size,omitempty"`
}

func (m *BucketWrapper) Reset()                    { *m = BucketWrapper{} }
func (m *BucketWrapper) String() string            { return proto.CompactTextString(m) }
func (*BucketWrapper) ProtoMessage()               {}
func (*BucketWrapper) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *BucketWrapper) GetData() []byte {
	if m != nil {
		return m.Data
	}
	return nil
}

func (m *BucketWrapper) GetSize() int64 {
	if m != nil {
		return m.Size
	}
	return 0
}

type BucketV2 struct {
	// Key is the storage path where the bucket gets stored
	Key string `sentinel:"" protobuf:"bytes,1,opt,name=key" json:"key,omitempty"`
	// Buckets are the buckets contained within this bucket
	Buckets map[string]*BucketV2 `sentinel:"" protobuf:"bytes,3,rep,name=buckets" json:"buckets,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	// ItemsMap holds the items contained within this bucket
	Items map[string]*Item `sentinel:"" protobuf:"bytes,4,rep,name=items" json:"items,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	// IsShard indicates if the bucket is pushed out of its parent bucket
	External bool `sentinel:"" protobuf:"varint,5,opt,name=external" json:"external,omitempty"`
	// Depth indicates the hierarchical positioning of the bucket
	Depth int32 `sentinel:"" protobuf:"varint,6,opt,name=depth" json:"depth,omitempty"`
	// Size of the bucket in number of bytes
	Size int64 `sentinel:"" protobuf:"varint,7,opt,name=size" json:"size,omitempty"`
}

func (m *BucketV2) Reset()                    { *m = BucketV2{} }
func (m *BucketV2) String() string            { return proto.CompactTextString(m) }
func (*BucketV2) ProtoMessage()               {}
func (*BucketV2) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *BucketV2) GetKey() string {
	if m != nil {
		return m.Key
	}
	return ""
}

func (m *BucketV2) GetBuckets() map[string]*BucketV2 {
	if m != nil {
		return m.Buckets
	}
	return nil
}

func (m *BucketV2) GetItems() map[string]*Item {
	if m != nil {
		return m.Items
	}
	return nil
}

func (m *BucketV2) GetExternal() bool {
	if m != nil {
		return m.External
	}
	return false
}

func (m *BucketV2) GetDepth() int32 {
	if m != nil {
		return m.Depth
	}
	return 0
}

func (m *BucketV2) GetSize() int64 {
	if m != nil {
		return m.Size
	}
	return 0
}

// Bucket is the entity that holds the packed items. It can
// contain multiple buckets within itself that gets sharded out
// when the bucket becomes big enough to not contain them all.
type Bucket struct {
	// Key is the storage path where the bucket gets stored
	Key string `sentinel:"" protobuf:"bytes,1,opt,name=key" json:"key,omitempty"`
	// For backwards compatibility
	Items []*Item `sentinel:"" protobuf:"bytes,2,rep,name=items" json:"items,omitempty"`
}

func (m *Bucket) Reset()                    { *m = Bucket{} }
func (m *Bucket) String() string            { return proto.CompactTextString(m) }
func (*Bucket) ProtoMessage()               {}
func (*Bucket) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *Bucket) GetKey() string {
	if m != nil {
		return m.Key
	}
	return ""
}

func (m *Bucket) GetItems() []*Item {
	if m != nil {
		return m.Items
	}
	return nil
}

func init() {
	proto.RegisterType((*Item)(nil), "storagepacker.Item")
	proto.RegisterType((*BucketWrapper)(nil), "storagepacker.BucketWrapper")
	proto.RegisterType((*BucketV2)(nil), "storagepacker.BucketV2")
	proto.RegisterType((*Bucket)(nil), "storagepacker.Bucket")
}

func init() { proto.RegisterFile("types.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 344 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x74, 0x92, 0x4f, 0x4b, 0xf3, 0x40,
	0x10, 0x87, 0x49, 0xd2, 0xb4, 0x7d, 0xa7, 0xed, 0x8b, 0xac, 0x05, 0x63, 0x4e, 0x21, 0x78, 0x88,
	0x07, 0xb7, 0x50, 0x0f, 0x16, 0x0f, 0x82, 0x42, 0x05, 0x0f, 0x5e, 0x56, 0xd0, 0xf3, 0xb6, 0x19,
	0x63, 0x68, 0x9b, 0x84, 0xdd, 0xad, 0x18, 0x4f, 0x7e, 0x74, 0xc9, 0x6e, 0xd3, 0x3f, 0x92, 0xde,
	0x66, 0xb3, 0xf3, 0x3c, 0x99, 0xf9, 0xb1, 0xd0, 0x53, 0x65, 0x81, 0x92, 0x16, 0x22, 0x57, 0x39,
	0x19, 0x48, 0x95, 0x0b, 0x9e, 0x60, 0xc1, 0xe7, 0x0b, 0x14, 0xfe, 0x79, 0x92, 0xe7, 0xc9, 0x12,
	0x47, 0xfa, 0x72, 0xb6, 0x7e, 0x1f, 0xf1, 0xac, 0x34, 0x9d, 0xe1, 0x23, 0xb4, 0x9e, 0x14, 0xae,
	0xc8, 0x7f, 0xb0, 0xd3, 0xd8, 0xb3, 0x02, 0x2b, 0xfa, 0xc7, 0xec, 0x34, 0x26, 0x14, 0x3a, 0x2b,
	0x94, 0x92, 0x27, 0xe8, 0xd9, 0x81, 0x15, 0xf5, 0xc6, 0x43, 0x6a, 0x24, 0xb4, 0x96, 0xd0, 0xfb,
	0xac, 0x64, 0x75, 0x53, 0x78, 0x03, 0x83, 0x87, 0xf5, 0x7c, 0x81, 0xea, 0x4d, 0xf0, 0xa2, 0x40,
	0x41, 0x08, 0xb4, 0x62, 0xae, 0xb8, 0x56, 0xf6, 0x99, 0xae, 0xab, 0x6f, 0x32, 0xfd, 0x36, 0x46,
	0x87, 0xe9, 0x3a, 0xfc, 0x71, 0xa0, 0x6b, 0xc8, 0xd7, 0x31, 0x39, 0x01, 0x67, 0x81, 0xe5, 0x66,
	0x8c, 0xaa, 0x24, 0x77, 0xd0, 0x99, 0xe9, 0x5b, 0xe9, 0x39, 0x81, 0x13, 0xf5, 0xc6, 0x17, 0xf4,
	0x60, 0x37, 0x5a, 0xb3, 0x9b, 0x42, 0x4e, 0x33, 0x25, 0x4a, 0x56, 0x43, 0x64, 0x02, 0x6e, 0xaa,
	0x70, 0x25, 0xbd, 0x96, 0xa6, 0xc3, 0x63, 0x74, 0x15, 0xc2, 0x86, 0x35, 0x00, 0xf1, 0xa1, 0x8b,
	0x5f, 0x0a, 0x45, 0xc6, 0x97, 0x9e, 0x1b, 0x58, 0x51, 0x97, 0x6d, 0xcf, 0x64, 0x08, 0x6e, 0x8c,
	0x85, 0xfa, 0xf0, 0xda, 0x81, 0x15, 0xb9, 0xcc, 0x1c, 0xb6, 0xeb, 0x75, 0x76, 0xeb, 0xf9, 0x2f,
	0xd0, 0xdf, 0x1f, 0xac, 0x61, 0xc3, 0x2b, 0x70, 0x3f, 0xf9, 0x72, 0x5d, 0xe7, 0x7c, 0x76, 0x64,
	0x42, 0x66, 0xba, 0x6e, 0xed, 0x89, 0xe5, 0x3f, 0x03, 0xec, 0xe6, 0x6d, 0x50, 0x5e, 0x1e, 0x2a,
	0x4f, 0xff, 0x28, 0x2b, 0x76, 0x4f, 0x17, 0x4e, 0xa1, 0x6d, 0xfe, 0xd2, 0xac, 0x32, 0xf9, 0xd9,
	0x3a, 0xbf, 0x66, 0x95, 0xee, 0x98, 0xb5, 0xf5, 0xcb, 0xb8, 0xfe, 0x0d, 0x00, 0x00, 0xff, 0xff,
	0xb0, 0xc0, 0x65, 0xe2, 0x8a, 0x02, 0x00, 0x00,
}
